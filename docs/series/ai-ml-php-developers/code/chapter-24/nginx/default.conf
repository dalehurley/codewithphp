upstream php_backend {
    least_conn;  # Use least-connections load balancing
    server app:8000 max_fails=3 fail_timeout=30s;
    # Add more servers for horizontal scaling:
    # server app2:8000 max_fails=3 fail_timeout=30s;
    # server app3:8000 max_fails=3 fail_timeout=30s;
}

# Main server block
server {
    listen 80;
    server_name _;  # Match any hostname

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Health check endpoint (bypasses caching)
    location /health {
        proxy_pass http://php_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_connect_timeout 5s;
        proxy_read_timeout 5s;
        access_log off;  # Don't log health checks
    }

    # API endpoints
    location /api/ {
        proxy_pass http://php_backend;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts for ML inference (can be slow)
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;

        # Error handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        proxy_next_upstream_tries 2;
    }

    # Metrics endpoint (protected - only localhost)
    location /metrics {
        allow 127.0.0.1;
        deny all;

        proxy_pass http://php_backend;
        proxy_http_version 1.1;
    }

    # Monitoring dashboard
    location /monitoring/ {
        proxy_pass http://php_backend;
        proxy_http_version 1.1;
    }

    # Default response for unknown paths
    location / {
        return 404 '{"error": "Not Found"}';
        add_header Content-Type application/json;
    }
}

# HTTPS configuration (uncomment after getting SSL cert)
# server {
#     listen 443 ssl http2;
#     server_name yourdomain.com;
#
#     ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
#
#     # SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#
#     # Include all location blocks from above
#     location /health { ... }
#     location /api/ { ... }
#     location /metrics { ... }
#     location / { ... }
# }

# Redirect HTTP to HTTPS (uncomment after SSL setup)
# server {
#     listen 80;
#     server_name yourdomain.com;
#     return 301 https://$server_name$request_uri;
# }


